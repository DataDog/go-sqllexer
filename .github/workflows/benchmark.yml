name: Run benchmarks
permissions:
  contents: read
 
on:
  push:
    branches: 
    - "*"
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  benchmark:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.24' ]

    steps:
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b
        with:
          go-version: ${{ matrix.go-version }}
      - name: Display Go version
        run: go version
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          clean: false
      - name: Install dependencies
        run: go get .
      - name: Build
        run: go build -v ./...
      - run: mkdir -p bench
      # - name: Restore benchmark
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: main-benchmark
      - name: Restore main benchmark
        uses: actions/cache/restore@v4
        with:
          path: bench/main.txt
          key: main-benchmark-2
      - name: Benchmark
        run: if [ ! -f bench/main.txt ]; then go test -timeout=9999999s -bench=. -benchmem -count=2  ./... | tee bench/main.txt; fi
      - name: Save main benchmark
        uses: actions/cache/save@v4
        with:
          path: bench/main.txt
          key: main-benchmark-2
      # - name: Store benchmark
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: main-benchmark
      #     path: bench/main.txt
      - name: Checkout branch
        uses: actions/checkout@v4
      # - name: Restore benchmark
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: main-benchmark
      - name: Restore main benchmark
        uses: actions/cache/restore@v4
        with:
          path: bench/main.txt
          key: main-benchmark-2
          fail-on-cache-miss: true
      - name: Install dependencies
        run: go get .
      - name: Build
        run: go build -v ./...
      - name: Benchmark
        run: go test -timeout=9999999s -bench=. -benchmem -count=10  ./... | tee bench/${{github.sha}}.txt
      - name: Install benchstat
        run: go get -u golang.org/x/perf/cmd/benchstat
      - name: Compare benchmarks
        run: benchstat bench/main.txt bench/${{github.sha}}.txt | tee bench/benchstat.txt
      - name: Store benchmark
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-${{ github.sha }}
          path: bench


  benchmark_main:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.24' ]
    steps:
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b
        with:
          go-version: ${{ matrix.go-version }}
      - name: Display Go version
        run: go version
      - name: Checkout main
        uses: actions/checkout@v4
      - name: Install dependencies
        run: go get .
      - name: Build
        run: go build -v ./...
      - run: mkdir -p bench
      - name: Benchmark
        run: go test -timeout=9999999s -bench=. -benchmem -count=2  ./... | tee bench/main.txt    
      - name: Save main benchmark
        uses: actions/cache/save@v4
        with:
          path: bench/main.txt
          key: main-benchmark-10
